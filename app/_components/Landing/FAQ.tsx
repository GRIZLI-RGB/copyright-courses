"use client";

import Image from "next/image";
import { useState } from "react";

import ModalWindow from "../ModalWindow";
import Title from "./Title";

const questions = [
	{
		title: "Общие вопросы",
		data: {
			"Сколько будет длиться курс?":
				"Если в среднем уделять занятиям на платформе 1.5-2 часа, то можно освоить программу за 2-3 дня. Дальше останется только оттачивать навыки в наших тренажерах.",
			"Смогу ли я устроиться на работу сразу после прохождения курса?":
				"Конечно! Целый раздел в нашем курсе уделен поиску работодателя, причем как на удаленке (фриланс), так и в офисе.",
			"Получу ли я после прохождения курса сертификат или любой другой документ об его завершении?":
				"Да. После успешного освоения всей программу и сдачи нужных внутренних экзаменов ученик получает документ, подтверждающий его профессиональные компетенции.",
		},
		img: "cloud",
	},
	{
		title: "Финансы",
		data: {
			"Из чего складывается стоимость разных пакетов обучения?":
				"Стоимость разных пакетов обучения включает в себя разное количество часов практики и дополнительных «плюшек», которые потом позволяют себя чувствовать в сфере копирайтинга значительно увереннее.",
			"Выдадут ли мне после оплаты соответствующие чеки?":
				"Моментально после прохождения транзакции на указанную вами почту придет кассовый чек о совершенной сделке. Также информация будет продублирована в личном кабинете на сайте.",
		},
		img: "pig",
	},
	{
		title: "Уроки и тренажеры",
		data: {
			"Как будут устроены уроки?":
				"Если речь идет о стандартных уроках, то процесс их прохождения основывается на изучении материала (теория), а после его практического применения (домашние задания, тесты, тренажеры).",
			"Что такое «онлайн-тренажер»?":
				"«Онлайн-тренажер» — это уникальная разработка нашей платформы. Она позволяет применить свои навыки в деле, не выходя за пределы среды обучения. Попробуйте, вам понравится!",
			"Что есть в базе знаний?":
				"Наша база знаний включает большой список насущных копирайтерских вопросов разных категорий, на который даются точные лаконичные ответы.",
			"Какие санкции последуют за невыполнение тех или иных уроков?":
				"В более продвинутых пакетах обучения ваш прогресс отслеживается куратором. Однако нужно понимать, что большая доля ответственности лежит на вас самих — вы являетесь тем, что должно мотивировать вас идти дальше, а наша задача лишь помогать не свернуть с этого пути.",
		},
		img: "book",
	},
	{
		title: "Гарантии",
		data: {
			"Есть ли какие-то документы, которые выдаются при начале обучения?":
				"Помимо кассового чека об оплате услуг платформы вам будет предоставлен полный перечень документов о возможности ведения такой деятельности нашим сайтом, о предоставляемых услугах в той или иной мере, а также о последующих гарантиях. Найти нужные документы можно в соответствующем разделе личного кабинета.",
			"Какие гарантии вы предоставляете?":
				"Часть гарантий — опциональны, то есть зависят от выбранного пакета. Непоколебимыми являются гарантии на качество предоставляемых услуг и своевременность их оказания в должной мере.",
		},
		img: "lock",
	},
];

export default function FAQ() {
	const [trigger, setTrigger] = useState(false);
	const [currentQuestion, setCurrentQuestion] = useState({
		question: "",
		answer: "",
	});

	return (
		<section className="pt-40" id="faq">
			<div className="container">
				<Title>FAQ</Title>
				<h6 className="mt-4 text-[20px] text-center">
					Остались вопросы? Давайте решим!
				</h6>
				<div className="mt-[70px] mb-40 grid grid-cols-2 gap-y-[50px] gap-x-[80px]">
					{questions.map(
						(question: {
							title: string;
							img: string;
							data: any;
						}) => (
							<div key={question.title}>
								<h6 className="font-bold text-[32px] leading-[100%] flex items-center mb-5 gap-3">
									<Image
										src={`/img/landing/faq/${question.img}.svg`}
										alt={question.title}
										width="48"
										height="48"
									/>
									{question.title}
								</h6>
								<ul>
									{Object.keys(question.data).map(
										(dk, index) => (
											<li
												className="leading-[25px] cursor-pointer text-[#284b63] hover:text-[#020e36] transition-colors mb-2.5 last:mb-0"
												key={index}
												onClick={() => {
													setCurrentQuestion({
														question: dk,
														answer: question.data[
															dk
														],
													});
													setTrigger(true);
												}}>
												— {dk}
											</li>
										),
									)}
								</ul>
							</div>
						),
					)}
				</div>
			</div>
			<ModalWindow trigger={trigger} setTrigger={setTrigger}>
				<div className="max-w-[650px]">
					<p className="font-bold text-white leading-[150%]">
						— {currentQuestion.question}
					</p>
					<p className="mt-[30px] text-white leading-[150%]">
						<span className="rounded-[5px] px-2 py-[3px] font-semibold bg-[#DA8D46] text-white">
							Ответ:
						</span>{" "}
						{currentQuestion.answer}
					</p>
				</div>
			</ModalWindow>
		</section>
	);
}
